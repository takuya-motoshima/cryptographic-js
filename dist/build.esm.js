import e from"crypto";import t from"util";var r="1.0.0";const{promisify:i}=t,s=i(e.randomBytes),n="abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789-._~".split(""),h="0123456789".split(""),o="CDEHKMPRTUWXY012458".split(""),a="!\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~".split(""),c="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789".split(""),f=[void 0,"hex","base64","url-safe","numeric","distinguishable","ascii-printable","alphanumeric"],l=(e,t)=>({length:r,type:i,characters:s})=>{if(!(r>=0&&Number.isFinite(r)))throw new TypeError("Expected a `length` to be a non-negative finite number");if(void 0!==i&&void 0!==s)throw new TypeError("Expected either `type` or `characters`");if(void 0!==s&&"string"!=typeof s)throw new TypeError("Expected `characters` to be string");if(!f.includes(i))throw new TypeError("Unknown type: "+i);if(void 0===i&&void 0===s&&(i="hex"),"hex"===i||void 0===i&&void 0===s)return t(Math.ceil(.5*r),"hex",r);if("base64"===i)return t(Math.ceil(.75*r),"base64",r);if("url-safe"===i)return e(r,n);if("numeric"===i)return e(r,h);if("distinguishable"===i)return e(r,o);if("ascii-printable"===i)return e(r,a);if("alphanumeric"===i)return e(r,c);if(0===s.length)throw new TypeError("Expected `characters` string length to be greater than or equal to 1");if(s.length>65536)throw new TypeError("Expected `characters` string length to be less or equal to 65536");return e(r,s.split(""))};var u=l((t,r)=>{const i=r.length,s=Math.floor(65536/i)*i-1,n=2*Math.ceil(1.1*t);let h="",o=0;for(;o<t;){const a=e.randomBytes(n);let c=0;for(;c<n&&o<t;){const e=a.readUInt16LE(c);c+=2,e>s||(h+=r[e%i],o++)}}return h},(t,r,i)=>e.randomBytes(t).toString(r).slice(0,i)),y=l(async(e,t)=>{const r=t.length,i=Math.floor(65536/r)*r-1,n=2*Math.ceil(1.1*e);let h="",o=0;for(;o<e;){const a=await s(n);let c=0;for(;c<n&&o<e;){const e=a.readUInt16LE(c);c+=2,e>i||(h+=t[e%r],o++)}}return h},async(e,t,r)=>(await s(e)).toString(t).slice(0,r));u.async=y;class p{constructor(){this.algorithm="",this.keySize=-1,this.ivSize=-1}encrypt(t,r,i,s="base64"){if(Buffer.isBuffer(r)||(r=Buffer.from(r)),Buffer.isBuffer(i)||(i=Buffer.from(i)),Buffer.byteLength(r)!==this.keySize)throw new Error(`Key length must be ${this.keySize} bytes long`);if(Buffer.byteLength(i)!==this.ivSize)throw new Error(`IV length must be ${this.ivSize} bytes long`);const n=e.createCipheriv(this.algorithm,r,i);let h=n.update(t,"utf8",s);return h+=n.final(s),h}decrypt(t,r,i,s="base64"){if(Buffer.isBuffer(r)||(r=Buffer.from(r)),Buffer.isBuffer(i)||(i=Buffer.from(i)),Buffer.byteLength(r)!==this.keySize)throw new Error(`Key length must be ${this.keySize} bytes long`);if(Buffer.byteLength(i)!==this.ivSize)throw new Error(`IV length must be ${this.keySize} bytes long`);const n=e.createDecipheriv(this.algorithm,r,i);let h=n.update(t,s,"utf8");return h+=n.final("utf8"),h}createKey(t="buffer"){return"hex"===t?u({length:this.keySize,type:"hex"}):e.randomBytes(this.keySize)}createIV(t="buffer"){return"hex"===t?u({length:this.ivSize,type:"hex"}):e.randomBytes(this.ivSize)}}class g extends p{constructor(){super(...arguments),this.algorithm="aes-256-ctr",this.keySize=32,this.ivSize=16}}class m extends p{constructor(){super(...arguments),this.algorithm="aes-192-ctr",this.keySize=24,this.ivSize=16}}class b extends p{constructor(){super(...arguments),this.algorithm="aes-128-ctr",this.keySize=16,this.ivSize=16}}class d extends p{constructor(){super(...arguments),this.algorithm="aes-256-cbc",this.keySize=32,this.ivSize=16}}class S extends p{constructor(){super(...arguments),this.algorithm="aes-192-cbc",this.keySize=24,this.ivSize=16}}class z extends p{constructor(){super(...arguments),this.algorithm="aes-128-cbc",this.keySize=16,this.ivSize=16}}class v extends p{constructor(){super(...arguments),this.algorithm="aes-256-cfb",this.keySize=32,this.ivSize=16}}class w extends p{constructor(){super(...arguments),this.algorithm="aes-192-cfb",this.keySize=24,this.ivSize=16}}class x extends p{constructor(){super(...arguments),this.algorithm="aes-128-cfb",this.keySize=16,this.ivSize=16}}export{z as AES128CBC,x as AES128CFB,b as AES128CTR,S as AES192CBC,w as AES192CFB,m as AES192CTR,d as AES256CBC,v as AES256CFB,g as AES256CTR,r as version};
